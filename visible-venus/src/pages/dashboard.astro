---
import { supabase } from '../lib/supabaseClient';

let user;

try {
    const { data: { session }, error } = await supabase.auth.getSession();
    if (session) {
        user = session.user;
    } else {
        return Astro.redirect('/login');
    }
} catch (error) {
    console.error('Session error:', error);
    return Astro.redirect('/login');
}
---

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <div id="dashboard">
        {user && (
            <>
                <h1 id="welcome-message">Welcome, {user.email}!</h1>
                <button id="logout-btn">Logout</button>
            </>
        )}
    </div>

    <script type="module">
      import { supabase } from '/src/lib/supabaseClient';

const checkSession = async () => {
    try {
        const { data: { session }, error } = await supabase.auth.getSession();

        if (error || !session) {
            console.error('Session check failed:', error);
            window.location.href = '/login';
        } else {
            document.getElementById('welcome-message').textContent = `Welcome, ${session.user.email}!`;
        }
    } catch (error) {
        console.error('Error during session check:', error);
        window.location.href = '/login';
    }
};

checkSession();
  
      // Handle logout
      document.getElementById('logout-btn')?.addEventListener('click', async () => {
          try {
              await supabase.auth.signOut();
              sessionStorage.removeItem('sb-supa-auth-token');
              window.location.href = '/login';
          } catch (error) {
              console.error('Logout error:', error);
          }
      });
  
      // Monitor auth state changes
      supabase.auth.onAuthStateChange((event, session) => {
          if (event === 'SIGNED_OUT' || !session) {
              sessionStorage.removeItem('sb-supa-auth-token');
              window.location.href = '/login';
          }
      });
  </script>
</body>
</html>